# See https://peps.python.org/pep-0621/

[project]
name = '{{cookiecutter.module_name}}' # No_spaces_allowed
description = '{{cookiecutter.project_description}}'
readme = 'README.md'
license = { file = 'LICENSE' }
requires-python = ">=3.12.6"
dependencies = [
    {% if cookiecutter.add_gui %}"PyQt5",{% endif %}
    {% if cookiecutter.require_config_file %}"tomli",{% endif %}
    "tomli>=2.2.1",
]
authors = [
    { name = 'Dieter Vansteenwegen',email = 'github@vansteenwegen.org'},
]

classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python',
]

keywords = [{{cookiecutter.keywords}}]
version = 'v0.1.0'

[project.urls]
Homepage = 'https://boxfish.be'
Repository = 'https://github.com/dietervansteenwegen/{{cookiecutter.repo_bare}}.git'
Changelog = 'https://github.com/dietervansteenwegen/{{cookiecutter.repo_bare}}/blob/master/CHANGELOG.md'
# Documentation = 'https://readthedocs.org'

[project.scripts]
{{cookiecutter.module_name}} = '{{cookiecutter.module_name}}.__main__:run'

{% if cookiecutter.add_gui %}[project.gui-scripts]
{{cookiecutter.module_name}}-gui = "main:main"
[project.optional-dependencies]
gui = ['PyQt5']{% endif %}

[build-system]
requires = ['setuptools', 'setuptools-scm']
build-backend = 'setuptools.build.meta'

[tool.uv]
dev-dependencies = ["pre-commit>=2.20.0"]

[tool.uv.pip]
generate-hashes = true

# [tool.setuptools.dynamic]
# dependencies = { file = ["requirements.txt"] }

[tool.setuptools.packages.find]
where = ['src'] # list of folders that contain the packages (['.'] by default)
include = [
    '{{cookiecutter.module_name}}',
] # package names should match these glob patterns (['*'] by default)
# exclude = ['my_package.tests*'] # exclude packages matching these glob patterns (empty by default)

[tool.bandit]
exclude_dirs = ["tests"]
# tests = ["B201", "B301"]
# skips = ["B101", "B601"]

[tool.ruff]
target-version = "py310"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs",
]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    # Pycodestyle errors
    "E",
    # Pycodestyle warnings
    "W",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # McCabe complex structure
    "C901",
    # PEP8 Naming
    "N",
    # Flake8-Bandit
    "S",
    # Flake8-builtins
    "A",
    # Flake8-commas
    "COM",
    # Flake8-datetimez
    "DTZ",
    # Flake8-errmsg
    "EM",
    # Flake8-use-pathlib
    "PTH",
    # tryceratops
    "TRY",
]

ignore = [
    # Use logging.exception instead of logging.error
    "TRY400",
    # Raising and catching exceptions in the same block may lead to confusion
    "TRY301",
{% if cookiecutter.add_gui %}
    # PyQT doesn't adhere to or works well with N801/N802/N803/N813
    "N801",   
    "N802",
    "N803",
    "N813",
{% endif %}
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# "docs/conf.py" = ["D100", "D101", "D105"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
exclude = ["*.pyi"]
