# See https://peps.python.org/pep-0621/

[project]
name = '{{cookiecutter.module_name}}'
description = '{{cookiecutter.project_description}}'
readme = 'README.md'
license = { file = 'LICENSE' }
requires-python = ">=3.12.6"
authors = [
    { name = 'Dieter Vansteenwegen', email = 'github@vansteenwegen.org' },
]

classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python',
    {% if cookiecutter.add_gui -%}"Environment :: Gui",{% else %}"Environment :: Console",{% endif %}
    "Intended Audience :: Developers",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Operating System :: POSIX :: Linux",
]

keywords = [{{cookiecutter.keywords}}]

dependencies = [
    {%- if cookiecutter.add_gui %}"PySide6>=6.8",{%- endif %}
    {%- if cookiecutter.use_config_file -%}"tomli>=2.2.1",{%- endif %}
    {%- if cookiecutter.create_env_template -%}"python-dotenv>=1.1.0",{%- endif %}
]
dynamic= ["version"]

[project.urls]




{% if cookiecutter.add_gui -%}[project.gui-scripts]
{{cookiecutter.module_name}}_gui = '{{cookiecutter.module_name}}.__main__:run'
{% else -%}
Homepage = 'https://boxfish.be'
Repository = 'https://github.com/dietervansteenwegen/{{cookiecutter.project_name_short}}.git'
Changelog = 'https://github.com/dietervansteenwegen/{{cookiecutter.project_name_short}}/blob/master/CHANGELOG.md'
# Documentation = 'https://readthedocs.org'
[project.scripts]
{{cookiecutter.module_name}}_cli = '{{cookiecutter.module_name}}.__main__:run'
{%- endif %}

[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "versioningit"

[tool.versioningit]

[tool.versioningit.write]
file = "src/{{cookiecutter.module}}/__version__.py"

[tool.uv]
dev-dependencies = [
    # "{{cookiecutter.module_name}}",
    "pre-commit>=4.1.0",
    "deptry>=0.22.0",
    "ruff>=0.9.6",
    "vulture>=2.14",
    {% if cookiecutter.add_gui -%}"pyside6-stubs>=6.4",{% endif %}
    {% if cookiecutter.add_documentation -%}"sphinx>=8.2.1",
    "sphinx-rtd-theme>=3.0.2",
    "sphinxcontrib-napoleon>=0.7",
    "recommonmark>=0.7.1",
    "sphinx-copybutton>=0.5.2",
    "sphinx-toggleprompt>=0.6.0",
    "myst-parser>=4.0.1",{% endif %}
]

[tool.uv.pip]
generate-hashes = true

[tool.uv.sources]
{{cookiecutter.module_name}} = { workspace = true }

[tool.setuptools.packages.find]
where = ['src'] # list of folders that contain the packages (['.'] by default)
include = [
    '{{cookiecutter.module_name}}',
] # package names should match these glob patterns (['*'] by default)
# exclude = ['my_package.tests*'] # exclude packages matching these glob patterns (empty by default)

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs",
{% if cookiecutter.add_gui -%}    "src/{{cookiecutter.module_name}}/ui_sources/*",{% endif -%}
]
target-version = "py310"
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    # Pycodestyle errors
    "E",
    # Pycodestyle warnings
    "W",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # McCabe complex structure
    "C901",
    # PEP8 Naming
    "N",
    # Flake8-Bandit
    "S",
    # Flake8-builtins
    "A",
    # Flake8-commas
    "COM",
    # Flake8-datetimez
    "DTZ",
    # Flake8-errmsg
    "EM",
    # Flake8-use-pathlib
    "PTH",
    # tryceratops
    "TRY",
]

ignore = [
    # Use logging.exception instead of logging.error
    "TRY400",
    # Raising and catching exceptions in the same block may lead to confusion
    "TRY301",
    # Do not run missing-trailing-comma together with formatter (see https://docs.astral.sh/ruff/rules/missing-trailing-comma/#formatter-compatibility)
    "COM812",
{% if cookiecutter.add_gui -%}
    # PyQT doesn't adhere to or works well with N801/N802/N803/N813
    "N801",
    "N802",
    "N803",
    "N813",
{%- endif %}
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# "docs/conf.py" = ["D100", "D101", "D105"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
exclude = ["*.pyi"]

[tool.vulture]
exclude = [{% if cookiecutter.add_gui -%}"src/{{cookiecutter.module_name}}/ui_sources"{% endif %}]
ignore_names = ['args', 'kwargs']
min_confidence = 60
paths = ['./src']
# ignore_decorators = ["@app.route", "@require_*"]
# make_whitelist = true
# sort_by_size = true
# verbose = true